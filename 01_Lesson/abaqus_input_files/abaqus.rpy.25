# -*- coding: mbcs -*-
#
# Abaqus/Viewer Release 2018 replay file
# Internal Version: 2017_11_07-09.21.41 127140
# Run by klim on Mon Apr 15 17:28:12 2019
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=339.333343505859, 
    height=180.603713989258)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from viewerModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
cliCommand("""#""")
cliCommand("""# Project XXXX""")
cliCommand("""#""")
cliCommand("""# Revision History""")
cliCommand("""# 000: New Script""")
cliCommand("""#""")
cliCommand("""# Use: abaqus viewer script=post_process_plots.py""")
cliCommand("""#""")
cliCommand("""#""")
cliCommand("""from abaqus import *""")
cliCommand("""from abaqusConstants import *""")
cliCommand("""from viewerModules import *""")
cliCommand("""from driverUtils import executeOnCaeStartup""")
cliCommand("""import sys""")
cliCommand("""#executeOnCaeStartup()""")
cliCommand("""#create viewport""")
cliCommand("""v=session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=300, height=150)""")
cliCommand("""v.makeCurrent()""")
cliCommand("""v.restore()""")
cliCommand("""#v.maximize()""")
cliCommand("""# ====================================================================""")
cliCommand("""Jobname     = '1ElementTest_Lesson1'""")
cliCommand("""ODBFile     = Jobname+'.odb'""")
cliCommand("""StepNo      = 1""")
cliCommand("""# ====================================================================""")
cliCommand("""#open ODB""")
cliCommand("""odb  = session.openOdb(name=ODBFile)""")
#: Model: C:/Users/klim/Desktop/SGH/GITHUB/AbaqusTraining/01_Lesson/abaqus_input_files/1ElementTest_Lesson1.odb
#: Number of Assemblies:         1
#: Number of Assembly instances: 0
#: Number of Part instances:     1
#: Number of Meshes:             1
#: Number of Element Sets:       2
#: Number of Node Sets:          2
#: Number of Steps:              1
cliCommand("""# view options""")
cliCommand("""v.setValues(displayedObject=odb)""")
cliCommand("""v.enableMultipleColors()""")
cliCommand("""v.setColor(initialColor='#BDBDBD')""")
cliCommand("""cmap=v.colorMappings['Section']""")
cliCommand("""cmap.updateOverrides(overrides={'PART-1-1.PDD_1MM.Section-PDD_1MM':(True, '#999999', 'Default', '#999999')})""")
cliCommand("""v.disableMultipleColors()""")
cliCommand("""v.viewportAnnotationOptions.setValues(legendFont='-*-verdana-medium-r-normal-*-*-80-*-*-p-*-*-*', titleFont='-*-verdana-medium-r-normal-*-*-80-*-*-p-*-*-*', stateFont='-*-verdana-medium-r-normal-*-*-80-*-*-p-*-*-*')""")
cliCommand("""v.viewportAnnotationOptions.setValues(titleBackgroundStyle=MATCH, stateBackgroundStyle=MATCH, legendBackgroundStyle=MATCH,compass=OFF)""")
cliCommand("""v.odbDisplay.basicOptions.setValues(connectorDisplay=OFF)""")
cliCommand("""session.printOptions.setValues(reduceColors=False)""")
cliCommand("""session.printOptions.setValues(vpDecorations=OFF)""")
cliCommand("""v.odbDisplay.commonOptions.setValues(visibleEdges=FREE) """)
cliCommand("""# paralel projection view""")
cliCommand("""v.view.setProjection(projection=PARALLEL)""")
cliCommand("""# fit view""")
cliCommand("""session.viewports['Viewport: 1'].view.fitView()""")
cliCommand("""# rotate model so that vertical Z is up""")
cliCommand("""session.viewports['Viewport: 1'].view.rotate(xAngle=-90, yAngle=0, zAngle=0, mode=MODEL)""")
cliCommand("""	
StepName = 'Step-'+str(StepNo)""")
cliCommand("""frames = odb.steps[StepName].frames""")
cliCommand("""nframes = len(frames)""")
cliCommand("""#output frame numbers """)
cliCommand("""fNum = [nframes]""")
cliCommand("""fLabel = ['Step'+str(StepNo)]""")
cliCommand("""for i in range(0,len(fNum)):
	
	# set frame
	session.viewports[session.currentViewportName].odbDisplay.setFrame(step=StepName, frame=fNum[i])
	
	# view element
	leaf = dgo.LeafFromElementSets(elementSets=("PART-1-1.P1", ))
	session.viewports['Viewport: 1'].odbDisplay.displayGroup.replace(leaf=leaf)	
	
	# title block
	session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(titleBackgroundStyle=TRANSPARENT)
	
	# state block
	session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(stateBackgroundStyle=TRANSPARENT)	
	
	#v.odbDisplay.commonOptions.setValues(edgeLineThickness=VERY_THIN)
	session.printOptions.setValues(vpBackground=OFF)
	
	# no title
	session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(title=OFF)
	
	# deformation scale factor
	session.viewports['Viewport: 1'].odbDisplay.commonOptions.setValues(deformationScaling=UNIFORM, uniformScaleFactor=1)
	
	# plot stress q
	v.odbDisplay.setPrimaryVariable(variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 'Mises'), )
	v.odbDisplay.display.setValues(plotState=CONTOURS_ON_DEF)
	v.odbDisplay.contourOptions.setValues(spectrum='Rainbow', maxAutoCompute=ON, maxValue=0, minAutoCompute=ON, minValue=0, showMinLocation=OFF, showMaxLocation=OFF)
	
	# output to TIFF file
	session.printToFile(fileName=Jobname+'_'+fLabel[i]+'_VMS', format=PNG, canvasObjects=(session.viewports['Viewport: 1'], ))
	
	# plot stress S33
	v.odbDisplay.setPrimaryVariable(variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(COMPONENT, 'S33'))
	v.odbDisplay.display.setValues(plotState=CONTOURS_ON_DEF)
	v.odbDisplay.contourOptions.setValues(spectrum='Rainbow', maxAutoCompute=ON, maxValue=0, minAutoCompute=ON, minValue=0, showMinLocation=OFF, showMaxLocation=OFF)
	
	# output to TIFF file
	session.printToFile(fileName=Jobname+'_'+fLabel[i]+'_S33', format=PNG, canvasObjects=(session.viewports['Viewport: 1'], ))
	
	#v.odbDisplay.setPrimaryVariable(variableLabel='U', outputPosition=NODAL, refinement=(COMPONENT, 'U2'), )
	
""")
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='RF', outputPosition=NODAL, refinement=(INVARIANT, 
    'Magnitude'))
session.viewports['Viewport: 1'].odbDisplay.setPrimaryVariable(
    variableLabel='RF', outputPosition=NODAL, refinement=(COMPONENT, 'RF3'))
cliCommand("""#""")
cliCommand("""# Project XXXX""")
cliCommand("""#""")
cliCommand("""# Revision History""")
cliCommand("""# 000: New Script""")
cliCommand("""#""")
cliCommand("""# Use: abaqus viewer script=post_process_plots.py""")
cliCommand("""#""")
cliCommand("""#""")
cliCommand("""from abaqus import *""")
cliCommand("""from abaqusConstants import *""")
cliCommand("""from viewerModules import *""")
cliCommand("""from driverUtils import executeOnCaeStartup""")
cliCommand("""import sys""")
cliCommand("""#executeOnCaeStartup()""")
cliCommand("""#create viewport""")
cliCommand("""v=session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=300, height=150)""")
cliCommand("""v.makeCurrent()""")
cliCommand("""v.restore()""")
cliCommand("""#v.maximize()""")
cliCommand("""# ====================================================================""")
cliCommand("""Jobname     = '1ElementTest_Lesson1'""")
cliCommand("""ODBFile     = Jobname+'.odb'""")
cliCommand("""StepNo      = 1""")
cliCommand("""# ====================================================================""")
cliCommand("""#open ODB""")
cliCommand("""odb  = session.openOdb(name=ODBFile)""")
cliCommand("""# view options""")
cliCommand("""v.setValues(displayedObject=odb)""")
cliCommand("""v.enableMultipleColors()""")
cliCommand("""v.setColor(initialColor='#BDBDBD')""")
cliCommand("""cmap=v.colorMappings['Section']""")
cliCommand("""cmap.updateOverrides(overrides={'PART-1-1.PDD_1MM.Section-PDD_1MM':(True, '#999999', 'Default', '#999999')})""")
cliCommand("""v.disableMultipleColors()""")
cliCommand("""v.viewportAnnotationOptions.setValues(legendFont='-*-verdana-medium-r-normal-*-*-80-*-*-p-*-*-*', titleFont='-*-verdana-medium-r-normal-*-*-80-*-*-p-*-*-*', stateFont='-*-verdana-medium-r-normal-*-*-80-*-*-p-*-*-*')""")
cliCommand("""v.viewportAnnotationOptions.setValues(titleBackgroundStyle=MATCH, stateBackgroundStyle=MATCH, legendBackgroundStyle=MATCH,compass=OFF)""")
cliCommand("""v.odbDisplay.basicOptions.setValues(connectorDisplay=OFF)""")
cliCommand("""session.printOptions.setValues(reduceColors=False)""")
cliCommand("""session.printOptions.setValues(vpDecorations=OFF)""")
cliCommand("""v.odbDisplay.commonOptions.setValues(visibleEdges=FREE) """)
cliCommand("""# paralel projection view""")
cliCommand("""v.view.setProjection(projection=PARALLEL)""")
cliCommand("""# fit view""")
cliCommand("""session.viewports['Viewport: 1'].view.fitView()""")
cliCommand("""# rotate model so that vertical Z is up""")
cliCommand("""session.viewports['Viewport: 1'].view.rotate(xAngle=-90, yAngle=0, zAngle=0, mode=MODEL)""")
cliCommand("""	
StepName = 'Step-'+str(StepNo)""")
cliCommand("""frames = odb.steps[StepName].frames""")
cliCommand("""nframes = len(frames)""")
cliCommand("""#output frame numbers """)
cliCommand("""fNum = [nframes]""")
cliCommand("""fLabel = ['Step'+str(StepNo)]""")
cliCommand("""for i in range(0,len(fNum)):
	
	# set frame
	session.viewports[session.currentViewportName].odbDisplay.setFrame(step=StepName, frame=fNum[i])
	
	# view element
	leaf = dgo.LeafFromElementSets(elementSets=("PART-1-1.P1", ))
	session.viewports['Viewport: 1'].odbDisplay.displayGroup.replace(leaf=leaf)	
	
	# title block
	session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(titleBackgroundStyle=TRANSPARENT)
	
	# state block
	session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(stateBackgroundStyle=TRANSPARENT)	
	
	#v.odbDisplay.commonOptions.setValues(edgeLineThickness=VERY_THIN)
	session.printOptions.setValues(vpBackground=OFF)
	
	# no title
	session.viewports['Viewport: 1'].viewportAnnotationOptions.setValues(title=OFF)
	
	# deformation scale factor
	session.viewports['Viewport: 1'].odbDisplay.commonOptions.setValues(deformationScaling=UNIFORM, uniformScaleFactor=1)
	
	# plot stress q
	v.odbDisplay.setPrimaryVariable(variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(INVARIANT, 'Mises'), )
	v.odbDisplay.display.setValues(plotState=CONTOURS_ON_DEF)
	v.odbDisplay.contourOptions.setValues(spectrum='Rainbow', maxAutoCompute=ON, maxValue=0, minAutoCompute=ON, minValue=0, showMinLocation=OFF, showMaxLocation=OFF)
	
	# output to TIFF file
	session.printToFile(fileName=Jobname+'_'+fLabel[i]+'_VMS', format=PNG, canvasObjects=(session.viewports['Viewport: 1'], ))
	
	# plot stress S33
	v.odbDisplay.setPrimaryVariable(variableLabel='S', outputPosition=INTEGRATION_POINT, refinement=(COMPONENT, 'S33'))
	v.odbDisplay.display.setValues(plotState=CONTOURS_ON_DEF)
	v.odbDisplay.contourOptions.setValues(spectrum='Rainbow', maxAutoCompute=ON, maxValue=0, minAutoCompute=ON, minValue=0, showMinLocation=OFF, showMaxLocation=OFF)
	
	# output to TIFF file
	session.printToFile(fileName=Jobname+'_'+fLabel[i]+'_S33', format=PNG, canvasObjects=(session.viewports['Viewport: 1'], ))
	
	# plot reaction force
	v.odbDisplay.setPrimaryVariable(variableLabel='RF', outputPosition=NODAL, refinement=(COMPONENT, 'RF3'))
	v.odbDisplay.display.setValues(plotState=CONTOURS_ON_DEF)
	v.odbDisplay.contourOptions.setValues(spectrum='Rainbow', maxAutoCompute=ON, maxValue=0, minAutoCompute=ON, minValue=0, showMinLocation=OFF, showMaxLocation=OFF)
	
	# output to TIFF file
	session.printToFile(fileName=Jobname+'_'+fLabel[i]+'_RF3', format=PNG, canvasObjects=(session.viewports['Viewport: 1'], ))
	
	#v.odbDisplay.setPrimaryVariable(variableLabel='U', outputPosition=NODAL, refinement=(COMPONENT, 'U2'), )
	
""")
cliCommand("""odb.close()""")
cliCommand("""sys.exit()""")
#* Exit code: 0
